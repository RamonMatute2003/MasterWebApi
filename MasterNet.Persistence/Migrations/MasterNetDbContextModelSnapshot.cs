// <auto-generated />
using System;
using MasterNet.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterNet.Persistence.Migrations
{
    [DbContext(typeof(MasterNetDbContext))]
    partial class MasterNetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("MasterNet.Domain.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd7e3774-7f16-4911-80cc-0cf30a155f18"),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            PublicationDate = new DateTime(2025, 1, 6, 20, 13, 2, 904, DateTimeKind.Utc).AddTicks(3298),
                            Title = "Awesome Cotton Keyboard"
                        },
                        new
                        {
                            Id = new Guid("a68536d7-7e4c-4ccc-862d-47c6751cb42c"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            PublicationDate = new DateTime(2025, 1, 6, 20, 13, 2, 904, DateTimeKind.Utc).AddTicks(3509),
                            Title = "Licensed Fresh Fish"
                        },
                        new
                        {
                            Id = new Guid("d4563293-6959-4e05-bca8-5fd6a43dadce"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            PublicationDate = new DateTime(2025, 1, 6, 20, 13, 2, 904, DateTimeKind.Utc).AddTicks(3523),
                            Title = "Refined Granite Mouse"
                        },
                        new
                        {
                            Id = new Guid("ca4fc4ae-8a1f-4eb7-822d-1357affa07f5"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            PublicationDate = new DateTime(2025, 1, 6, 20, 13, 2, 904, DateTimeKind.Utc).AddTicks(3531),
                            Title = "Licensed Granite Shoes"
                        },
                        new
                        {
                            Id = new Guid("887fb9ab-7c9f-4d8b-a3da-9b3b5bcfaf38"),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            PublicationDate = new DateTime(2025, 1, 6, 20, 13, 2, 904, DateTimeKind.Utc).AddTicks(3582),
                            Title = "Intelligent Steel Shirt"
                        },
                        new
                        {
                            Id = new Guid("a327543f-06e2-4fc7-936d-7b70378201bc"),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            PublicationDate = new DateTime(2025, 1, 6, 20, 13, 2, 904, DateTimeKind.Utc).AddTicks(3601),
                            Title = "Intelligent Fresh Keyboard"
                        },
                        new
                        {
                            Id = new Guid("9e7690e7-8691-41b0-8a3b-76ab5cee6a57"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            PublicationDate = new DateTime(2025, 1, 6, 20, 13, 2, 904, DateTimeKind.Utc).AddTicks(3612),
                            Title = "Sleek Concrete Bacon"
                        },
                        new
                        {
                            Id = new Guid("862ff55c-3281-47c8-ac15-5711f402a5bd"),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            PublicationDate = new DateTime(2025, 1, 6, 20, 13, 2, 904, DateTimeKind.Utc).AddTicks(3621),
                            Title = "Handmade Steel Salad"
                        },
                        new
                        {
                            Id = new Guid("7d29e596-1473-446d-8b74-80b49673b694"),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            PublicationDate = new DateTime(2025, 1, 6, 20, 13, 2, 904, DateTimeKind.Utc).AddTicks(3630),
                            Title = "Small Soft Mouse"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.CourseInstructor", b =>
                {
                    b.Property<Guid>("InstructorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.HasKey("InstructorId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("courseInstructors", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.CoursePrice", b =>
                {
                    b.Property<Guid>("PriceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.HasKey("PriceId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("coursePrices", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Evaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Student")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("evaluations", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Grade")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("instructors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("330c6c8f-d180-40da-96d9-645e1cd02532"),
                            Grade = "Future Directives Consultant",
                            LastName = "Muller",
                            Name = "Ursula"
                        },
                        new
                        {
                            Id = new Guid("cf098d4c-daae-4d7a-913c-0a3279d99bf2"),
                            Grade = "Dynamic Implementation Manager",
                            LastName = "O'Connell",
                            Name = "Reanna"
                        },
                        new
                        {
                            Id = new Guid("07768234-23ee-4a80-8f55-e1fd4a32ce69"),
                            Grade = "Forward Usability Representative",
                            LastName = "Spinka",
                            Name = "Shane"
                        },
                        new
                        {
                            Id = new Guid("cf087082-d8d6-4e98-97fe-506240c8f639"),
                            Grade = "Regional Creative Specialist",
                            LastName = "Osinski",
                            Name = "Casimir"
                        },
                        new
                        {
                            Id = new Guid("77a79ddd-4fed-4857-ba9f-1965b1d03a76"),
                            Grade = "Central Accountability Administrator",
                            LastName = "Grant",
                            Name = "Gabe"
                        },
                        new
                        {
                            Id = new Guid("c726c8f1-a385-4e13-848a-2547c304d314"),
                            Grade = "Investor Research Producer",
                            LastName = "Homenick",
                            Name = "Mallie"
                        },
                        new
                        {
                            Id = new Guid("dc0792af-9b93-4348-aeee-8dc68306b3dd"),
                            Grade = "Dynamic Operations Developer",
                            LastName = "Pfannerstill",
                            Name = "Laurence"
                        },
                        new
                        {
                            Id = new Guid("6035653a-c70d-45e2-8bda-39c280d5feb8"),
                            Grade = "Future Intranet Officer",
                            LastName = "Pollich",
                            Name = "Isaac"
                        },
                        new
                        {
                            Id = new Guid("ba85ece5-b0b4-4844-83cf-88addc32164e"),
                            Grade = "Forward Security Producer",
                            LastName = "Emard",
                            Name = "Juwan"
                        },
                        new
                        {
                            Id = new Guid("258270b9-1d3c-4e98-865f-cf9f229bf85e"),
                            Grade = "Direct Marketing Manager",
                            LastName = "Gulgowski",
                            Name = "Dora"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("images", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Price", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PromotionalPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("prices", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("59934f2e-5ed5-4282-8250-2eff23f0cdbc"),
                            CurrentPrice = 10.0m,
                            Name = "Precio Regular",
                            PromotionalPrice = 8.0m
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.CourseInstructor", b =>
                {
                    b.HasOne("MasterNet.Domain.Course", "Course")
                        .WithMany("CourseInstructors")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Instructor", "Instructor")
                        .WithMany("CoursesInstructors")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("MasterNet.Domain.CoursePrice", b =>
                {
                    b.HasOne("MasterNet.Domain.Course", "Course")
                        .WithMany("CoursePrices")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Price", "Price")
                        .WithMany("CoursePrices")
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Price");
                });

            modelBuilder.Entity("MasterNet.Domain.Evaluation", b =>
                {
                    b.HasOne("MasterNet.Domain.Course", "Course")
                        .WithMany("Evaluations")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Course");
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.HasOne("MasterNet.Domain.Course", "Course")
                        .WithMany("Photos")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("MasterNet.Domain.Course", b =>
                {
                    b.Navigation("CourseInstructors");

                    b.Navigation("CoursePrices");

                    b.Navigation("Evaluations");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Navigation("CoursesInstructors");
                });

            modelBuilder.Entity("MasterNet.Domain.Price", b =>
                {
                    b.Navigation("CoursePrices");
                });
#pragma warning restore 612, 618
        }
    }
}
